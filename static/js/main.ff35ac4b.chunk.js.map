{"version":3,"sources":["common/constants/titles.js","common/constants/icons.js","global.js","common/constants/actionType.js","common/components/Navbar/Navbar.js","redux/actions/scaleActions.js","common/functions/getDataFromApi.js","common/constants/api.js","common/constants/urls.js","redux/actions/weatherActions.js","common/components/Search/Search.js","common/functions/imageFunctions.js","common/functions/handleDegreeConversion.js","weather/ForecastHeader.js","redux/actions/favoritesActions.js","common/functions/dateFunctions.js","weather/ForecastItem.js","weather/ForecastContainer.js","redux/reducers/index.js","redux/reducers/favoritesReducer.js","redux/reducers/weatherReducer.js","redux/reducers/scaleReducer.js","redux/store.js","favorites/FavoriteItem.js","favorites/FavoritesContainer.js","theme.js","App.js","index.js"],"names":["navbarTitles","defaultCityDetails","iconsList","HOUSE_ICON","xmlns","width","height","fill","className","viewBox","fillRule","d","FAV_ICON","SEARCH_ICON","X_ICON","HEART_ICON","HEART_ICON_FAV","color","SUN_ICON","class","MOON_ICON","GlobalStyles","createGlobalStyle","theme","body","text","NavBarStyle","styled","div","props","navbarBackground","NavBarButtons","span","buttonBorderColor","buttonTextColor","buttonColorHover","NavBarTitle","navbarTitleColor","ThemeButton","button","buttonBackground","ScaleButton","SearchBox","searchboxColor","SearchBoxInput","input","searchboxInputColor","searchboxInputTextColor","searchboxPlaceholderColor","SearchBoxInputIcons","searchboxIconColor","CityItem","cityItemFontColor","weatherActions","searchActions","favoritesActions","scaleActions","Navbar","toggleChange","themeValue","dispatch","useDispatch","scale","useSelector","state","scaleReducer","to","onClick","type","getData","url","a","fetch","data","json","jsonData","iconUrls","weatherUrls","apiKeyUrls","APIKEY_URL","searchUrls","AUTO_COMPLETE_CITY_SEARCH","COORDINATES_CITY_SEARCH","setSelectedCityData","key","name","payload","loadCityWeather","id","country","cityDetails","currentWeather","loadCurrentCityWeather","currentCityWeather","currentCityForecast","Search","useState","setText","useDebounce","value","cityArr","setCityArr","useEffect","test","charAt","length","alert","lastValidText","substring","dataFromSearch","Dropdown","Toggle","variant","aria-expanded","placeholder","onChange","e","target","Menu","map","city","Item","Key","LocalizedName","Country","setWeatherImage","iconNumber","celToFahrNumber","degree","Number","parseFloat","toFixed","isMetric","checkDegreeScale","unit","ForecastHeader","currentCityData","favouriteList","removeCityFromFavorites","filteredList","filter","addCityToFavorites","src","WeatherIcon","alt","WeatherText","Temperature","Metric","Value","Unit","parseDate","date","newDate","Date","day","getFormatedDayText","getDay","getDate","month","getFormatedMonth","getMonth","ForecastItem","index","Maximum","Day","Icon","IconPhrase","ForecastContainer","currentCity","weatherReducer","favoritesReducer","geopoistionLocationSuccess","poistion","coords","latitude","longitude","currentPositionWeatherData","EnglishName","geopoistionLocationError","error","code","message","Object","values","navigator","geolocation","getCurrentPosition","role","aria-hidden","forecast","DailyForecasts","combineReducers","action","store","createStore","rootReducer","compose","applyMiddleware","thunk","FavoriteItem","FavoritesContainer","favorites","setFavouriteCity","lightTheme","toggleBorder","gradient","themeButtonText","darkTheme","App","setTheme","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff35ac4b.chunk.js","sourcesContent":["export const navbarTitles = {\r\n  MAIN_NAV: \"Weather App\",\r\n  HOME_NAV: \"Home\",\r\n  FAV_NAV: \"Favorites\",\r\n};\r\n\r\nexport const defaultCityDetails = {\r\n  DEFAULT_CITY_NAME: \"Tel Aviv\",\r\n  DEFAULT_CITY_ID: \"215854\",\r\n  DEFAULT_CITY_COUNTRY: \"Israel\",\r\n};\r\n\r\nexport const errorMessage = {\r\n  ERROR_MESSAGE: \"Error occured: \",\r\n};\r\n","export const iconsList = {\r\n  HOUSE_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"25\"\r\n      height=\"20\"\r\n      fill=\"black\"\r\n      className=\"bi bi-house\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M2 13.5V7h1v6.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V7h1v6.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5zm11-11V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  FAV_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      fill=\"black\"\r\n      className=\"bi bi-bookmark-heart\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M8 4.41c1.387-1.425 4.854 1.07 0 4.277C3.146 5.48 6.613 2.986 8 4.412z\"\r\n      />\r\n      <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\" />\r\n    </svg>\r\n  ),\r\n  SEARCH_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-search\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n    </svg>\r\n  ),\r\n  X_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-x\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n  ),\r\n  HEART_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"40px\"\r\n      height=\"40px\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-heart\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n    </svg>\r\n  ),\r\n  HEART_ICON_FAV: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"40\"\r\n      height=\"40\"\r\n      fill=\"red\"\r\n      color=\"black\"\r\n      className=\"bi bi-heart-fill\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  SUN_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"30\"\r\n      height=\"30\"\r\n      fill=\"currentColor\"\r\n      class=\"bi bi-sun\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n    </svg>\r\n  ),\r\n  MOON_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"30\"\r\n      height=\"30\"\r\n      fill=\"currentColor\"\r\n      class=\"bi bi-moon\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z\" />\r\n    </svg>\r\n  ),\r\n};\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    \r\n    transition: all 0.25s linear;\r\n  }`;\r\n\r\nexport const NavBarStyle = styled.div`\r\n  background: ${(props) => props.theme.navbarBackground};\r\n`;\r\n\r\nexport const NavBarButtons = styled.span`\r\n  border: outset;\r\n  border-color: ${(props) => props.theme.buttonBorderColor};\r\n  padding: 0.1em;\r\n  border-radius: 10px;\r\n  border-width: 0.2em;\r\n  color: ${(props) => props.theme.buttonTextColor};\r\n  font-size: x-large;\r\n\r\n  @media (max-width: 2000px) {\r\n    &:hover {\r\n      background: ${(props) => props.theme.buttonColorHover};\r\n    }\r\n  }\r\n`;\r\nexport const NavBarTitle = styled.span`\r\n  color: ${(props) => props.theme.navbarTitleColor};\r\n  margin-left: 0.5em;\r\n  position: relative;\r\n  font-size: x-large;\r\n`;\r\n\r\nexport const ThemeButton = styled.button`\r\n  border: outset;\r\n  border-color: ${(props) => props.theme.buttonBorderColor};\r\n  padding: 0.17em;\r\n  border-radius: 10px;\r\n  border-width: 0.2em;\r\n  color: ${(props) => props.theme.buttonTextColor};\r\n  background: ${(props) => props.theme.buttonBackground};\r\n  width: 4em;\r\n  border-width: thick;\r\n  margin-top: -0.29rem;\r\n  @media (max-width: 2000px) {\r\n    &:hover {\r\n      background: ${(props) => props.theme.buttonColorHover};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScaleButton = styled.button`\r\n  border: outset;\r\n  border-color: ${(props) => props.theme.buttonBorderColor};\r\n  padding: 0.27em;\r\n  border-radius: 10px;\r\n  border-width: 0.2em;\r\n  color: ${(props) => props.theme.buttonTextColor};\r\n  background: ${(props) => props.theme.buttonBackground};\r\n  width: 4em;\r\n  border-width: thick;\r\n  margin-top: 0.19rem;\r\n  font-size: large;\r\n  @media (max-width: 2000px) {\r\n    &:hover {\r\n      background: ${(props) => props.theme.buttonColorHover};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SearchBox = styled.div`\r\n  background: ${(props) => props.theme.searchboxColor};\r\n`;\r\n\r\nexport const SearchBoxInput = styled.input`\r\n  background: ${(props) => props.theme.searchboxInputColor};\r\n  color: ${(props) => props.theme.searchboxInputTextColor};\r\n  ::placeholder {\r\n    color: ${(props) => props.theme.searchboxPlaceholderColor};\r\n  }\r\n`;\r\n\r\nexport const SearchBoxInputIcons = styled.span`\r\n  position: absolute;\r\n  right: 30px;\r\n  color: ${(props) => props.theme.searchboxIconColor};\r\n`;\r\n\r\nexport const CityItem = styled.div`\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #736d6d;\r\n  color: ${(props) => props.theme.cityItemFontColor};\r\n`;\r\n","export const weatherActions = {\r\n  LOAD_CITY_WEATHER: \"LOAD_CITY_WEATHER\",\r\n  LOAD_CITY_WEATHER_FORECAST: \"LOAD_CITY_WEATHER_FORECAST\",\r\n};\r\n\r\nexport const searchActions = {\r\n  SET_SELECTED_CITY_FROM_SEARCH: \"SET_SELECTED_CITY_FROM_SEARCH\",\r\n};\r\n\r\nexport const favoritesActions = {\r\n  ADD_CITY_TO_FAVORITES: \"ADD_CITY_TO_FAVORITES\",\r\n  REMOVE_CITY_FROM_FAVORITES: \"REMOVE_CITY_FROM_FAVORITES\",\r\n};\r\n\r\nexport const scaleActions = {\r\n  CHANGE_DEGREE_SCALE: \"CHANGE_DEGREE_SCALE\",\r\n};\r\n","import React from \"react\";\r\nimport { navbarTitles } from \"../../constants/titles\";\r\nimport { iconsList } from \"../../constants/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport {\r\n  NavBarButtons,\r\n  NavBarTitle,\r\n  ThemeButton,\r\n  ScaleButton,\r\n} from \"../../../global\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeDegreeScale } from \"../../../redux/actions/scaleActions\";\r\nconst Navbar = ({ toggleChange, themeValue }) => {\r\n  const dispatch = useDispatch();\r\n  const scale = useSelector((state) => state.scaleReducer);\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <nav className=\"navbar navbar-expand  navbar-light nav-container\">\r\n        <NavBarTitle className>{navbarTitles.MAIN_NAV}</NavBarTitle>\r\n        <ul className=\"navbar-nav nav-list \">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/\">\r\n              <NavBarButtons className=\"home-text\">\r\n                {navbarTitles.HOME_NAV}\r\n              </NavBarButtons>\r\n\r\n              <span className=\"home-icon\"> {iconsList.HOUSE_ICON}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/favorites\">\r\n              <NavBarButtons className=\"fav-text\">\r\n                {navbarTitles.FAV_NAV}\r\n              </NavBarButtons>\r\n              <span className=\"fav-icon\"> {iconsList.FAV_ICON}</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item  \">\r\n            <ScaleButton onClick={() => dispatch(changeDegreeScale())}>\r\n              {scale}\r\n            </ScaleButton>\r\n          </li>\r\n          <li className=\"nav-item nav-link theme-toggle \">\r\n            <ThemeButton onClick={() => toggleChange()}>\r\n              {themeValue === \"light\"\r\n                ? iconsList.SUN_ICON\r\n                : iconsList.MOON_ICON}\r\n            </ThemeButton>\r\n\r\n            {<span> Theme Toggle</span>}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { scaleActions } from \"../../common/constants/actionType\";\r\n\r\nexport function changeDegreeScale() {\r\n  return {\r\n    type: scaleActions.CHANGE_DEGREE_SCALE,\r\n  };\r\n}\r\n","export async function getData(url) {\r\n  const data = await fetch(url);\r\n  const jsonData = await data.json();\r\n\r\n  return jsonData;\r\n}\r\n","//IMPORTANT MESSAGE!!\r\n// APIKEYS WILL NOT BE STORED IN THE FRONTEND,NEVER!!!\r\n\r\nexport const apiKeys = {\r\n  WEATHER_APIKEY: \"PIimPWGUrGCg2Covf2cuTTfXVD0TQSoG\",\r\n};\r\n\r\n//benzvi.ron api vM6VW4AdspAAhri19e6sH8YWdgLAwLjO\r\n//iron69 api PIimPWGUrGCg2Covf2cuTTfXVD0TQSoG\r\n//sapir api QngsUcOOCIoOXVq74UsT9jTGMyFs9edo\r\n","import { apiKeys } from \"./api\";\r\n\r\nexport const iconUrls = {\r\n  WEATHER_URL_PREFIX: \"https://developer.accuweather.com/sites/default/files/\",\r\n  WEATHER_URL_SUFFIX: \"-s.png\",\r\n};\r\n\r\nexport const weatherUrls = {\r\n  CITY_CURRENT_WEATHER: ` https://dataservice.accuweather.com/currentconditions/v1/`,\r\n  CITY_FIVE_DAY_FORECAST:\r\n    \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\",\r\n};\r\nexport const apiKeyUrls = {\r\n  APIKEY_URL: `?apikey=${apiKeys.WEATHER_APIKEY}`,\r\n};\r\nexport const searchUrls = {\r\n  AUTO_COMPLETE_CITY_SEARCH: `https://dataservice.accuweather.com/locations/v1/cities/autocomplete`,\r\n  COORDINATES_CITY_SEARCH: `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search${apiKeyUrls.APIKEY_URL}&q=`,\r\n};\r\n","import {\r\n  searchActions,\r\n  weatherActions,\r\n} from \"../../common/constants/actionType\";\r\nimport { getData } from \"../../common/functions/getDataFromApi\";\r\nimport { weatherUrls, apiKeyUrls } from \"../../common/constants/urls\";\r\n/* import { defaultCityDetails } from \"../../common/constants/titles\"; for testing reasons*/\r\n\r\nexport function setSelectedCityData(key, name) {\r\n  return {\r\n    type: searchActions.SET_SELECTED_CITY_FROM_SEARCH,\r\n    payload: { name, key },\r\n  };\r\n}\r\nexport function loadCityWeather(id, name, country, data) {\r\n  return {\r\n    type: weatherActions.LOAD_CITY_WEATHER,\r\n    payload: {\r\n      cityDetails: {\r\n        name: name,\r\n        id: id,\r\n        country: country,\r\n      },\r\n      currentWeather: data,\r\n    },\r\n  };\r\n}\r\nexport function loadCityForecast(data) {\r\n  return {\r\n    type: weatherActions.LOAD_CITY_WEATHER_FORECAST,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function loadCurrentCityWeather(id, name, country) {\r\n  return async function (dispatch) {\r\n    const currentCityWeather = await getData(\r\n      `${weatherUrls.CITY_CURRENT_WEATHER}${id}${apiKeyUrls.APIKEY_URL}`\r\n    );\r\n\r\n    dispatch(loadCityWeather(id, name, country, currentCityWeather[0]));\r\n    const currentCityForecast = await getData(\r\n      `${weatherUrls.CITY_FIVE_DAY_FORECAST}${id}${apiKeyUrls.APIKEY_URL}`\r\n    );\r\n    return dispatch(loadCityForecast(currentCityForecast));\r\n  };\r\n}\r\n","import { iconsList } from \"../../constants/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport \"./style.css\";\r\nimport {\r\n  SearchBox,\r\n  SearchBoxInput,\r\n  SearchBoxInputIcons,\r\n} from \"../../../global\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { getData } from \"../../functions/getDataFromApi\";\r\nimport { searchUrls, apiKeyUrls } from \"../../constants/urls\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSelectedCityData } from \"../../../redux/actions/weatherActions\";\r\n\r\nimport { loadCurrentCityWeather } from \"../../../redux/actions/weatherActions\";\r\n\r\nconst Search = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [value] = useDebounce(text, 200);\r\n  const [cityArr, setCityArr] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      if (!/[a-zA-Z\\s]/.test(text.charAt(text.length - 1))) {\r\n        alert(\"not an english letter,please use only english letters\");\r\n        if (text.length > 1) {\r\n          const lastValidText = text.substring(0, text.length - 1);\r\n          setText(lastValidText);\r\n          return;\r\n        }\r\n        if (text.length) {\r\n          setText(\"\");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (value.length) {\r\n      (async function () {\r\n        const dataFromSearch = await getData(\r\n          `${searchUrls.AUTO_COMPLETE_CITY_SEARCH}${apiKeyUrls.APIKEY_URL}&q=${value}`\r\n        );\r\n\r\n        setCityArr(dataFromSearch);\r\n      })();\r\n    } else {\r\n      setSelectedCityData([]);\r\n    }\r\n  }, [value]);\r\n\r\n  const setSearchedData = (key, name, country) => {\r\n    dispatch(loadCurrentCityWeather(key, name, country));\r\n    setText(name);\r\n    setSelectedCityData([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <Dropdown>\r\n        <SearchBox>\r\n          <Dropdown.Toggle\r\n            variant=\"primary\"\r\n            id=\"dropdown-basic\"\r\n            aria-expanded=\"true\"\r\n          >\r\n            <SearchBoxInput\r\n              type=\"text\"\r\n              placeholder=\"Start typing city name\"\r\n              onChange={(e) => setText(e.target.value)}\r\n              value={value}\r\n              className=\"search-input\"\r\n            />\r\n            <SearchBoxInputIcons>\r\n              {text.length === 0 ? (\r\n                <span>{iconsList.SEARCH_ICON}</span>\r\n              ) : (\r\n                <span onClick={() => setText(\"\")}>{iconsList.X_ICON}</span>\r\n              )}\r\n            </SearchBoxInputIcons>\r\n          </Dropdown.Toggle>\r\n        </SearchBox>\r\n\r\n        {text.length > 0 ? (\r\n          <Dropdown.Menu>\r\n            {cityArr.map((city) => (\r\n              <Dropdown.Item\r\n                key={city.Key}\r\n                onClick={() =>\r\n                  setSearchedData(\r\n                    city.Key,\r\n                    city.LocalizedName,\r\n                    city.Country.LocalizedName\r\n                  )\r\n                }\r\n              >\r\n                {` ${city.LocalizedName}, ${city.Country.LocalizedName}`}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        ) : null}\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export function setWeatherImage(iconNumber) {\r\n  return iconNumber < 10 ? `0${iconNumber}` : `${iconNumber}`;\r\n}\r\n","export function fahrToCelNumber(degree) {\r\n  return Number.parseFloat((degree - 32) * 0.5556).toFixed(1);\r\n}\r\n\r\nexport function fahrToCelText() {\r\n  return \"C\";\r\n}\r\n\r\nexport function celToFahrNumber(degree) {\r\n  return Number.parseFloat(degree * 1.8 + 32).toFixed(1);\r\n}\r\n\r\nexport function celToFahrText() {\r\n  return \"F\";\r\n}\r\nexport function isMetric(scale) {\r\n  if (scale === \"C\") {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nexport function checkDegreeScale(scale, value, unit) {\r\n  if (scale === \"C\") {\r\n    if (isMetric(unit)) {\r\n      return [value.toFixed(1), \" \", unit];\r\n    } else {\r\n      return [fahrToCelNumber(value), \" \", fahrToCelText()];\r\n    }\r\n  } else {\r\n    if (isMetric(unit)) {\r\n      return [celToFahrNumber(value), \" \", celToFahrText()];\r\n    } else {\r\n      return [value.toFixed(1), \" \", unit];\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setWeatherImage } from \"../common/functions/imageFunctions\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\nimport { iconsList } from \"../common/constants/icons\";\r\nimport \"./style.css\";\r\nimport { checkDegreeScale } from \"../common/functions/handleDegreeConversion\";\r\nimport {\r\n  addFavouriteCity,\r\n  removeFavouriteCity,\r\n} from \"../redux/actions/favoritesActions\";\r\n\r\nconst ForecastHeader = ({ currentCityData, favouriteList }) => {\r\n  const dispatch = useDispatch();\r\n  const scale = useSelector((state) => state.scaleReducer);\r\n  const isCityinFavouritesList = () => {\r\n    const filteredList = favouriteList.filter(\r\n      (city) => city.id === currentCityData.cityDetails.id\r\n    );\r\n\r\n    return filteredList.length ? true : false;\r\n  };\r\n  const removeCityFromFavorites = () => {\r\n    const filteredList = favouriteList.filter(\r\n      (city) => city.id !== currentCityData.cityDetails.id\r\n    );\r\n    dispatch(removeFavouriteCity(filteredList));\r\n  };\r\n  const addCityToFavorites = () => {\r\n    dispatch(addFavouriteCity(currentCityData));\r\n  };\r\n  const handleFavoritesRequest = () => {\r\n    const filteredArray = favouriteList.filter(\r\n      (city) => city.id === currentCityData.cityDetails.id\r\n    );\r\n    if (filteredArray.length) {\r\n      removeCityFromFavorites();\r\n    } else {\r\n      addCityToFavorites();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row header-forecast \">\r\n      <div className=\"col-1 \">\r\n        <img\r\n          src={`${iconUrls.WEATHER_URL_PREFIX}${setWeatherImage(\r\n            currentCityData.currentWeather.WeatherIcon\r\n          )}${iconUrls.WEATHER_URL_SUFFIX}`}\r\n          alt={currentCityData.currentWeather.WeatherText}\r\n          id=\"current-weather-icon\"\r\n        />\r\n      </div>\r\n      <div className=\"col-4 current-weather-details\">\r\n        <div>{`${currentCityData.cityDetails.name}, ${currentCityData.cityDetails.country}`}</div>\r\n        {checkDegreeScale(\r\n          scale,\r\n          currentCityData.currentWeather.Temperature.Metric.Value,\r\n          currentCityData.currentWeather.Temperature.Metric.Unit\r\n        )}\r\n      </div>\r\n      <div className=\"col-5 fav-icon-container\">\r\n        <span className=\"fav-icon-header\" onClick={handleFavoritesRequest}>\r\n          {isCityinFavouritesList()\r\n            ? iconsList.HEART_ICON_FAV\r\n            : iconsList.HEART_ICON}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastHeader;\r\n","import { favoritesActions } from \"../../common/constants/actionType\";\r\n\r\nexport function addFavouriteCity(city) {\r\n  return {\r\n    type: favoritesActions.ADD_CITY_TO_FAVORITES,\r\n    payload: {\r\n      id: city.cityDetails.id,\r\n      name: city.cityDetails.name,\r\n      country: city.cityDetails.country,\r\n      currentWeather: city.currentWeather,\r\n    },\r\n  };\r\n}\r\n\r\nexport function removeFavouriteCity(cityList) {\r\n  return {\r\n    type: favoritesActions.REMOVE_CITY_FROM_FAVORITES,\r\n    payload: cityList,\r\n  };\r\n}\r\n","export function getFormatedDayText(day) {\r\n  switch (day) {\r\n    case 0:\r\n      return \"Sunday\";\r\n    case 1:\r\n      return \"Monday\";\r\n    case 2:\r\n      return \"Tuesday\";\r\n    case 3:\r\n      return \"Wednesday\";\r\n    case 4:\r\n      return \"Thursday\";\r\n    case 5:\r\n      return \"Friday\";\r\n    case 6:\r\n      return \"Saturday\";\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport function getFormatedMonth(month) {\r\n  switch (month) {\r\n    case 0:\r\n      return \"01\";\r\n    case 1:\r\n      return \"02\";\r\n    case 2:\r\n      return \"03\";\r\n    case 3:\r\n      return \"04\";\r\n    case 4:\r\n      return \"05\";\r\n    case 5:\r\n      return \"06\";\r\n    case 6:\r\n      return \"07\";\r\n    case 7:\r\n      return \"08\";\r\n    case 8:\r\n      return \"09\";\r\n    case 9:\r\n      return \"10\";\r\n    case 10:\r\n      return \"11\";\r\n    case 11:\r\n      return \"12\";\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport function parseDate(date) {\r\n  const newDate = new Date(date);\r\n  const dayText = getFormatedDayText(newDate.getDay());\r\n  const dateArr = ` ${newDate.getDate()}/${getFormatedMonth(\r\n    newDate.getMonth()\r\n  )}`;\r\n  return [dayText, dateArr];\r\n}\r\n","import React from \"react\";\r\nimport { parseDate } from \"../common/functions/dateFunctions\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\nimport { setWeatherImage } from \"../common/functions/imageFunctions\";\r\nimport { checkDegreeScale } from \"../common/functions/handleDegreeConversion\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ForecastItem = ({ data }) => {\r\n  const scale = useSelector((state) => state.scaleReducer);\r\n\r\n  return (\r\n    <div>\r\n      {parseDate(data.Date).map((date, index) => (\r\n        <div key={index}>{date}</div>\r\n      ))}\r\n      {checkDegreeScale(\r\n        scale,\r\n        data.Temperature.Maximum.Value,\r\n        data.Temperature.Maximum.Unit\r\n      )}\r\n\r\n      <div>\r\n        <img\r\n          src={`${iconUrls.WEATHER_URL_PREFIX}${setWeatherImage(\r\n            data.Day.Icon\r\n          )}${iconUrls.WEATHER_URL_SUFFIX}`}\r\n          alt={data.Day.IconPhrase}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastItem;\r\n","import React, { useEffect } from \"react\";\r\nimport ForecastHeader from \"./ForecastHeader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { defaultCityDetails } from \"../common/constants/titles\";\r\nimport { loadCurrentCityWeather } from \"../redux/actions/weatherActions\";\r\nimport \"./style.css\";\r\nimport ForecastItem from \"./ForecastItem\";\r\nimport { getData } from \"../common/functions/getDataFromApi\";\r\nimport { searchUrls } from \"../common/constants/urls\";\r\n\r\nconst ForecastContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const currentCity = useSelector((state) => state.weatherReducer);\r\n  const favouriteList = useSelector((state) => state.favoritesReducer);\r\n  async function geopoistionLocationSuccess(poistion) {\r\n    const currentPositionWeatherData = await getData(\r\n      `${searchUrls.COORDINATES_CITY_SEARCH}${poistion.coords.latitude}%2C${poistion.coords.longitude}`\r\n    );\r\n    dispatch(\r\n      loadCurrentCityWeather(\r\n        currentPositionWeatherData.Key,\r\n        currentPositionWeatherData.EnglishName,\r\n        currentPositionWeatherData.Country.EnglishName\r\n      )\r\n    );\r\n  }\r\n\r\n  function geopoistionLocationError(error) {\r\n    alert(`Error code ${error.code}:${\"\\n\"}${error.message}`);\r\n    dispatch(\r\n      loadCurrentCityWeather(\r\n        defaultCityDetails.DEFAULT_CITY_ID,\r\n        defaultCityDetails.DEFAULT_CITY_NAME,\r\n        defaultCityDetails.DEFAULT_CITY_COUNTRY\r\n      )\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!Object.values(currentCity).length) {\r\n      if (!navigator.geolocation) {\r\n        alert(`Your browser don't support geolocation `);\r\n        dispatch(\r\n          loadCurrentCityWeather(\r\n            defaultCityDetails.DEFAULT_CITY_ID,\r\n            defaultCityDetails.DEFAULT_CITY_NAME,\r\n            defaultCityDetails.DEFAULT_CITY_COUNTRY\r\n          )\r\n        );\r\n      } else {\r\n        navigator.geolocation.getCurrentPosition(\r\n          geopoistionLocationSuccess,\r\n          geopoistionLocationError\r\n        );\r\n      }\r\n    }\r\n  }, [currentCity]);\r\n\r\n  if (Object.values(currentCity).length < 3) {\r\n    return (\r\n      <div className=\"d-flex align-items-center\">\r\n        <strong>Loading...</strong>\r\n        <div\r\n          className=\"spinner-border ms-auto\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container forecast-cotainer\">\r\n      <div className=\"row\">\r\n        <ForecastHeader\r\n          currentCityData={currentCity}\r\n          favouriteList={favouriteList}\r\n        />\r\n      </div>\r\n      <div className=\"row weather-text\">\r\n        {currentCity.currentWeather.WeatherText}\r\n      </div>\r\n      <div className=\"row forecast-container\">\r\n        {currentCity.forecast.DailyForecasts.map((day) => {\r\n          return (\r\n            <div key={day.Date} className=\"col forecast-item-container\">\r\n              <ForecastItem data={day} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastContainer;\r\n","import { combineReducers } from \"redux\";\r\nimport { favoritesReducer } from \"./favoritesReducer\";\r\nimport { weatherReducer } from \"./weatherReducer\";\r\nimport { scaleReducer } from \"./scaleReducer\";\r\n\r\nexport default combineReducers({\r\n  favoritesReducer,\r\n  weatherReducer,\r\n  scaleReducer,\r\n});\r\n","import { favoritesActions } from \"../../common/constants/actionType\";\r\n\r\nexport function favoritesReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case favoritesActions.ADD_CITY_TO_FAVORITES:\r\n      return [...state, action.payload];\r\n    case favoritesActions.REMOVE_CITY_FROM_FAVORITES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { weatherActions } from \"../../common/constants/actionType\";\r\n\r\nexport function weatherReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case weatherActions.LOAD_CITY_WEATHER:\r\n      return {\r\n        ...state,\r\n        cityDetails: action.payload.cityDetails,\r\n        currentWeather: action.payload.currentWeather,\r\n      };\r\n\r\n    case weatherActions.LOAD_CITY_WEATHER_FORECAST:\r\n      return { ...state, forecast: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { scaleActions } from \"../../common/constants/actionType\";\r\n\r\nexport function scaleReducer(state = \"C\", action) {\r\n  switch (action.type) {\r\n    case scaleActions.CHANGE_DEGREE_SCALE:\r\n      if (state === \"C\") {\r\n        return \"F\";\r\n      } else {\r\n        return \"C\";\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nexport const store = createStore(rootReducer, compose(applyMiddleware(thunk)));\r\n","import React from \"react\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\nimport { setWeatherImage } from \"../common/functions/imageFunctions\";\r\nimport { CityItem } from \"../global\";\r\nimport \"./style.css\";\r\nimport { checkDegreeScale } from \"../common/functions/handleDegreeConversion\";\r\nimport { useSelector } from \"react-redux\";\r\nconst FavoriteItem = ({ data }) => {\r\n  const scale = useSelector((state) => state.scaleReducer);\r\n  return (\r\n    <CityItem className=\"col\">\r\n      <div>{data.name}</div>\r\n      <div>{data.country}</div>\r\n      <div>\r\n        {checkDegreeScale(\r\n          scale,\r\n          data.currentWeather.Temperature.Metric.Value,\r\n          data.currentWeather.Temperature.Metric.Unit\r\n        )}\r\n      </div>\r\n      <span>\r\n        <img\r\n          src={`${iconUrls.WEATHER_URL_PREFIX}${setWeatherImage(\r\n            data.currentWeather.WeatherIcon\r\n          )}${iconUrls.WEATHER_URL_SUFFIX}`}\r\n          alt={data.currentWeather.WeatherIcon}\r\n        />\r\n      </span>\r\n      <div>{data.currentWeather.WeatherText}</div>\r\n    </CityItem>\r\n  );\r\n};\r\n\r\nexport default FavoriteItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FavoriteItem from \"./FavoriteItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCurrentCityWeather } from \"../redux/actions/weatherActions\";\r\nimport \"./style.css\";\r\nconst FavoritesContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const favorites = useSelector((state) => state.favoritesReducer);\r\n  const setFavouriteCity = (city) => {\r\n    dispatch(loadCurrentCityWeather(city.id, city.name, city.country));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row favourite-container\">\r\n      {favorites.map((city) => (\r\n        <div\r\n          className=\"col-1 city-item-container\"\r\n          key={city.id}\r\n          onClick={() => setFavouriteCity(city)}\r\n        >\r\n          <Link to=\"/\" className=\"link-item\">\r\n            <FavoriteItem data={city} />\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritesContainer;\r\n","export const lightTheme = {\r\n  body: \"#ffffff\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  navbarBackground: \"#e3f2fd\",\r\n  gradient: \"linear-gradient(#39598A, #79D7ED)\",\r\n  buttonBorderColor: \"lightblue\",\r\n  buttonColorHover: \"lightblue\",\r\n  navbarTitleColor: \"black\",\r\n  buttonTextColor: \"black\",\r\n  searchboxColor: \"#e3f2fd\",\r\n  searchboxInputColor: \"white\",\r\n  searchboxPlaceholderColor: \"black\",\r\n  searchboxInputTextColor: \"black\",\r\n  searchboxIconColor: \"grey\",\r\n  buttonBackground: \"#e3f2fd\",\r\n  cityItemFontColor: \"black\",\r\n  themeButtonText: \"black\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#736d6d\",\r\n  toggleBorder: \"#6B8096\",\r\n  navbarBackground: \"gray\",\r\n  gradient: \"linear-gradient(#091236, #1E215D)\",\r\n  buttonBorderColor: \"#5C5C5C\",\r\n  buttonColorHover: \"#5C5C5C\",\r\n  navbarTitleColor: \"#FFFFFF\",\r\n  buttonTextColor: \"#FFFFFF\",\r\n  searchboxColor: \"#5C5C5C\",\r\n  searchboxInputColor: \"grey\",\r\n  searchboxPlaceholderColor: \"white\",\r\n  searchboxInputTextColor: \"white\",\r\n  searchboxIconColor: \"white\",\r\n  buttonBackground: \"gray\",\r\n  cityItemFontColor: \"#736d6d\",\r\n  themeButtonText: \"white\",\r\n};\r\n","import Navbar from \"./common/components/Navbar/Navbar\";\nimport Search from \"./common/components/Search/Search\";\nimport ForecastContainer from \"./weather/ForecastContainer\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Favorites from \"./favorites/FavoritesContainer\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { GlobalStyles, NavBarStyle } from \"./global\";\nimport \"./style.css\";\nimport { useState } from \"react\";\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <Provider store={store}>\n          <Router>\n            <NavBarStyle>\n              <Navbar toggleChange={toggleTheme} themeValue={theme} />\n            </NavBarStyle>\n\n            <div className=\"container\">\n              <Switch>\n                <Route path=\"/favorites\">\n                  <Favorites />\n                </Route>\n                <Route path=\"/\">\n                  <div className=\"row search\">\n                    <Search />\n                  </div>\n                  <div className=\"row main-forecast-container container\">\n                    {<ForecastContainer />}\n                  </div>\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}