{"version":3,"sources":["common/constants/titles.js","common/constants/icons.js","common/components/Navbar.js","common/functions/getDataFromApi.js","common/constants/api.js","common/constants/urls.js","common/constants/actionType.js","common/components/Search.js","common/functions/imageFunctions.js","weather/ForecastHeader.js","redux/actions/favoritesActions.js","common/functions/dateFunctions.js","weather/ForecastItem.js","common/functions/handleDegreeConversion.js","weather/ForecastContainer.js","redux/reducers/index.js","redux/reducers/favoritesReducer.js","redux/reducers/weatherReducer.js","redux/store.js","favorites/FavoriteItem.js","favorites/FavoritesContainer.js","App.js","index.js"],"names":["navbarTitles","errorMessage","ERROR_MESSAGE","iconsList","HOUSE_ICON","xmlns","width","height","fill","className","viewBox","fillRule","d","FAV_ICON","SEARCH_ICON","X_ICON","HEART_ICON","HEART_ICON_FAV","color","Navbar","style","backgroundColor","href","marginLeft","marginInlineStart","paddingInlineEnd","to","getData","url","a","fetch","data","json","jsonData","iconUrls","weatherUrls","apiKeyUrls","APIKEY_URL","searchUrls","weatherActions","favoritesActions","Search","useState","text","setText","useDebounce","value","cityArr","setCityArr","dispatch","useDispatch","useEffect","test","charAt","length","alert","then","res","position","Dropdown","Toggle","variant","id","aria-expanded","type","placeholder","onChange","e","target","float","minWidth","right","onClick","Menu","map","city","Item","key","Key","name","LocalizedName","weather","payload","cityDetails","currentWeather","catch","error","setWeatherImage","iconNumber","ForecastHeader","currentCityData","favouriteList","removeCityFromFavorites","filteredList","filter","addCityToFavorites","src","WeatherIcon","alt","WeatherText","marginRight","border","Temperature","Metric","Value","Unit","textAlign","paddingLeft","parseDate","date","newDate","Date","day","getFormatedDayText","getDay","getDate","month","getFormatedMonth","getMonth","ForecastItem","degree","index","Maximum","Number","parseFloat","toFixed","Minimum","Day","Icon","IconPhrase","connect","state","currentCity","weatherReducer","favoritesReducer","Object","values","class","role","aria-hidden","marginTop","justifyContent","fontSize","margin","paddingBlockStart","forecast","DailyForecasts","combineReducers","action","store","createStore","rootReducer","FavoriteItem","favorites","borderStyle","setFavouriteCity","textDecorationLine","App","path","exact","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cae1b4d6.chunk.js","sourcesContent":["export const navbarTitles = {\r\n  MAIN_NAV: \"Herolo Weather Task\",\r\n  HOME_NAV: \"Home\",\r\n  FAV_NAV: \"Favorites\",\r\n};\r\n\r\nexport const defaultCityDetails = {\r\n  DEFAULT_CITY_NAME: \"Tel Aviv\",\r\n  DEFAULT_CITY_ID: \"215854\",\r\n};\r\n\r\nexport const errorMessage = {\r\n  ERROR_MESSAGE: \"Error occured: \",\r\n};\r\n","export const iconsList = {\r\n  HOUSE_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"black\"\r\n      className=\"bi bi-house\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M2 13.5V7h1v6.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V7h1v6.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5zm11-11V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  FAV_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"black\"\r\n      className=\"bi bi-bookmark-heart\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M8 4.41c1.387-1.425 4.854 1.07 0 4.277C3.146 5.48 6.613 2.986 8 4.412z\"\r\n      />\r\n      <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\" />\r\n    </svg>\r\n  ),\r\n  SEARCH_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-search\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n    </svg>\r\n  ),\r\n  X_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-x\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n  ),\r\n  HEART_ICON: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"40px\"\r\n      height=\"40px\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-heart\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n    </svg>\r\n  ),\r\n  HEART_ICON_FAV: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"40\"\r\n      height=\"40\"\r\n      fill=\"red\"\r\n      color=\"black\"\r\n      className=\"bi bi-heart-fill\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\r\n      />\r\n    </svg>\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport { navbarTitles } from \"../constants/titles\";\r\nimport { iconsList } from \"../constants/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className=\"navbar navbar-expand-md  navbar-light\"\r\n        style={{ backgroundColor: \"#e3f2fd\" }}\r\n      >\r\n        <a className=\"navbar-brand\" href=\"!#\" style={{ marginLeft: \"1em\" }}>\r\n          {navbarTitles.MAIN_NAV}\r\n        </a>\r\n\r\n        <div className=\"collapse navbar-collapse\">\r\n          <ul\r\n            className=\"navbar-nav mr-auto  mt-md-0\"\r\n            style={{ marginInlineStart: \"auto\", paddingInlineEnd: \"50px\" }}\r\n          >\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                <span> {navbarTitles.HOME_NAV}</span>\r\n                <span> {iconsList.HOUSE_ICON}</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/favorites\">\r\n                <span> {navbarTitles.FAV_NAV}</span>\r\n                <span> {iconsList.FAV_ICON}</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export async function getData(url) {\r\n  const data = await fetch(url);\r\n  const jsonData = await data.json();\r\n\r\n  return jsonData;\r\n}\r\n","//IMPORTANT MESSAGE!!\r\n// APIKEYS WILL NOT BE STORED IN THE FRONTEND,NEVER!!!\r\n\r\nexport const apiKeys = {\r\n  WEATHER_APIKEY: \"rYTCiKLgZGARegIAVa8omedstlM4BOAH\",\r\n};\r\n","import { apiKeys } from \"./api\";\r\n\r\nexport const iconUrls = {\r\n  WEATHER_URL_PREFIX: \"https://developer.accuweather.com/sites/default/files/\",\r\n  WEATHER_URL_SUFFIX: \"-s.png\",\r\n};\r\n\r\nexport const weatherUrls = {\r\n  CITY_CURRENT_WEATHER: ` http://dataservice.accuweather.com/currentconditions/v1/`,\r\n  CITY_FIVE_DAY_FORECAST:\r\n    \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\",\r\n};\r\nexport const apiKeyUrls = {\r\n  APIKEY_URL: `?apikey=${apiKeys.WEATHER_APIKEY}`,\r\n};\r\nexport const searchUrls = {\r\n  AUTO_COMPLETE_CITY_SEARCH: `http://dataservice.accuweather.com/locations/v1/cities/autocomplete`,\r\n};\r\n","export const weatherActions = {\r\n  LOAD_CITY_WEATHER: \"LOAD_CITY_WEATHER\",\r\n  LOAD_CITY_WEATHER_FORECAST: \"LOAD_CITY_WEATHER_FORECAST\",\r\n};\r\n\r\nexport const searchActions = {\r\n  SET_SELECTED_CITY_FROM_SEARCH: \"SET_SELECTED_CITY_FROM_SEARCH\",\r\n};\r\n\r\nexport const favoritesActions = {\r\n  ADD_CITY_TO_FAVORITES: \"ADD_CITY_TO_FAVORITES\",\r\n  REMOVE_CITY_FROM_FAVORITES: \"REMOVE_CITY_FROM_FAVORITES\",\r\n};\r\n","import { iconsList } from \"../constants/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { autoSearchTel } from \"../../mockData\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { getData } from \"../functions/getDataFromApi\";\r\nimport { searchUrls, apiKeyUrls, weatherUrls } from \"../constants/urls\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSelectedCityData } from \"../../redux/actions/weatherActions\";\r\nimport { weatherActions } from \"../constants/actionType\";\r\n\r\nconst Search = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [value] = useDebounce(text, 500);\r\n  const [cityArr, setCityArr] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      if (!/[a-zA-Z]/.test(text.charAt(text.length - 1))) {\r\n        alert(\"not an english letter,please correct\");\r\n      }\r\n    }\r\n\r\n    if (value.length) {\r\n      getData(\r\n        `${searchUrls.AUTO_COMPLETE_CITY_SEARCH}${apiKeyUrls.APIKEY_URL}&q=${value}`\r\n      ).then((res) => setCityArr(res));\r\n    } else {\r\n      setSelectedCityData([]);\r\n    }\r\n  }, [value]);\r\n\r\n  const setSearchedData = (key, name) => {\r\n    getData(\r\n      `${weatherUrls.CITY_CURRENT_WEATHER}${key}${apiKeyUrls.APIKEY_URL}`\r\n    ).then(function (weather) {\r\n      dispatch({\r\n        type: weatherActions.LOAD_CITY_WEATHER,\r\n        payload: {\r\n          cityDetails: {\r\n            name: name,\r\n            id: key,\r\n          },\r\n          currentWeather: weather[0],\r\n        },\r\n      });\r\n      getData(\r\n        `${weatherUrls.CITY_FIVE_DAY_FORECAST}${key}${apiKeyUrls.APIKEY_URL}`\r\n      )\r\n        .then((res) =>\r\n          dispatch({\r\n            type: weatherActions.LOAD_CITY_WEATHER_FORECAST,\r\n            payload: res,\r\n          })\r\n        )\r\n        .catch((error) => alert(`forecast fetch error ${error}`));\r\n    });\r\n    setText(name);\r\n  };\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <Dropdown>\r\n        <Dropdown.Toggle\r\n          variant=\"primary\"\r\n          id=\"dropdown-basic\"\r\n          style={{ width: \"400px\", backgroundColor: \"#e3f2fd\" }}\r\n          aria-expanded=\"true\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Start typing city name\"\r\n            onChange={(e) => setText(e.target.value)}\r\n            style={{ float: \"left\", minWidth: \"98%\" }}\r\n            value={value}\r\n          />\r\n          <span\r\n            style={{\r\n              position: \"absolute\",\r\n              right: \"30px\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            {text.length === 0 ? (\r\n              <span>{iconsList.SEARCH_ICON}</span>\r\n            ) : (\r\n              <span onClick={() => setText(\"\")}>{iconsList.X_ICON}</span>\r\n            )}\r\n          </span>\r\n        </Dropdown.Toggle>\r\n\r\n        {text.length > 0 ? (\r\n          <Dropdown.Menu>\r\n            {cityArr.map((city) => (\r\n              <Dropdown.Item\r\n                key={city.Key}\r\n                onClick={() => setSearchedData(city.Key, city.LocalizedName)}\r\n              >\r\n                {city.LocalizedName}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        ) : null}\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export function setWeatherImage(iconNumber) {\r\n  return iconNumber < 10 ? `0${iconNumber}` : `${iconNumber}`;\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setWeatherImage } from \"../common/functions/imageFunctions\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\nimport { iconsList } from \"../common/constants/icons\";\r\n\r\nimport {\r\n  addFavouriteCity,\r\n  removeFavouriteCity,\r\n} from \"../redux/actions/favoritesActions\";\r\n\r\nconst ForecastHeader = ({ currentCityData, favouriteList }) => {\r\n  const dispatch = useDispatch();\r\n  const isCityinFavouritesList = () => {\r\n    const filteredList = favouriteList.filter(\r\n      (city) => city.id === currentCityData.cityDetails.id\r\n    );\r\n\r\n    return filteredList.length ? true : false;\r\n  };\r\n  const removeCityFromFavorites = () => {\r\n    const filteredList = favouriteList.filter(\r\n      (city) => city.id !== currentCityData.cityDetails.id\r\n    );\r\n    dispatch(removeFavouriteCity(filteredList));\r\n  };\r\n  const addCityToFavorites = () => {\r\n    dispatch(addFavouriteCity(currentCityData));\r\n  };\r\n  const handleFavoritesRequest = () => {\r\n    const filteredArray = favouriteList.filter(\r\n      (city) => city.id === currentCityData.cityDetails.id\r\n    );\r\n    if (filteredArray.length) {\r\n      removeCityFromFavorites();\r\n    } else {\r\n      addCityToFavorites();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-1\">\r\n        <img\r\n          src={`${iconUrls.WEATHER_URL_PREFIX}${setWeatherImage(\r\n            currentCityData.currentWeather.WeatherIcon\r\n          )}${iconUrls.WEATHER_URL_SUFFIX}`}\r\n          alt={currentCityData.currentWeather.WeatherText}\r\n          style={{ marginRight: \"20px\", border: \"outset\" }}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"col-4 currentForecastData\"\r\n        style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\r\n      >\r\n        <div> {currentCityData.cityDetails.name}</div>\r\n        {` ${currentCityData.currentWeather.Temperature.Metric.Value} ${currentCityData.currentWeather.Temperature.Metric.Unit}`}\r\n      </div>\r\n      <div className=\"col-5\" style={{ textAlign: \"right\" }}>\r\n        <span onClick={handleFavoritesRequest} style={{ paddingLeft: \"100%\" }}>\r\n          {isCityinFavouritesList()\r\n            ? iconsList.HEART_ICON_FAV\r\n            : iconsList.HEART_ICON}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastHeader;\r\n","import { favoritesActions } from \"../../common/constants/actionType\";\r\n\r\nexport function addFavouriteCity(city) {\r\n  return {\r\n    type: favoritesActions.ADD_CITY_TO_FAVORITES,\r\n    payload: {\r\n      id: city.cityDetails.id,\r\n      name: city.cityDetails.name,\r\n      currentWeather: city.currentWeather,\r\n    },\r\n  };\r\n}\r\n\r\nexport function removeFavouriteCity(cityList) {\r\n  return {\r\n    type: favoritesActions.REMOVE_CITY_FROM_FAVORITES,\r\n    payload: cityList,\r\n  };\r\n}\r\n","export function getFormatedDayText(day) {\r\n  switch (day) {\r\n    case 0:\r\n      return \"Sunday\";\r\n    case 1:\r\n      return \"Monday\";\r\n    case 2:\r\n      return \"Tuesday\";\r\n    case 3:\r\n      return \"Wednesday\";\r\n    case 4:\r\n      return \"Thursday\";\r\n    case 5:\r\n      return \"Friday\";\r\n    case 6:\r\n      return \"Saturday\";\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport function getFormatedMonth(month) {\r\n  switch (month) {\r\n    case 0:\r\n      return \"01\";\r\n    case 1:\r\n      return \"02\";\r\n    case 2:\r\n      return \"03\";\r\n    case 3:\r\n      return \"04\";\r\n    case 4:\r\n      return \"05\";\r\n    case 5:\r\n      return \"06\";\r\n    case 6:\r\n      return \"07\";\r\n    case 7:\r\n      return \"08\";\r\n    case 8:\r\n      return \"09\";\r\n    case 9:\r\n      return \"10\";\r\n    case 10:\r\n      return \"11\";\r\n    case 11:\r\n      return \"12\";\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport function parseDate(date) {\r\n  const newDate = new Date(date);\r\n  const dayText = getFormatedDayText(newDate.getDay());\r\n  const dateArr = ` ${newDate.getDate()}/${getFormatedMonth(\r\n    newDate.getMonth()\r\n  )}`;\r\n  return [dayText, dateArr];\r\n}\r\n","import React from \"react\";\r\nimport { parseDate } from \"../common/functions/dateFunctions\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\nimport { setWeatherImage } from \"../common/functions/imageFunctions\";\r\nimport {\r\n  fahrToCelNumber,\r\n  fahrToCelText,\r\n} from \"../common/functions/handleDegreeConversion\";\r\n\r\nconst ForecastItem = ({ data }) => {\r\n  return (\r\n    <div>\r\n      {parseDate(data.Date).map((date, index) => (\r\n        <div key={index}>{date}</div>\r\n      ))}\r\n      {fahrToCelNumber(data.Temperature.Maximum.Value)}{\" \"}\r\n      {fahrToCelText(data.Temperature.Minimum.Unit)}\r\n      <div>\r\n        <img\r\n          src={`${iconUrls.WEATHER_URL_PREFIX}${setWeatherImage(\r\n            data.Day.Icon\r\n          )}${iconUrls.WEATHER_URL_SUFFIX}`}\r\n          alt={data.Day.IconPhrase}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastItem;\r\n","export function fahrToCelNumber(degree) {\r\n  return Number.parseFloat((degree - 32) * 0.5556).toFixed(1);\r\n}\r\n\r\nexport function fahrToCelText(text) {\r\n  return \"C\";\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ForecastHeader from \"./ForecastHeader\";\r\nimport { currentCityData, currentCityWeather, fiveDay } from \"../mockData\";\r\nimport { connect } from \"react-redux\";\r\nimport { getData } from \"../common/functions/getDataFromApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { defaultCityDetails } from \"../common/constants/titles\";\r\nimport { weatherActions } from \"../common/constants/actionType\";\r\nimport { weatherUrls, apiKeyUrls } from \"../common/constants/urls\";\r\nimport { errorMessage } from \"../common/constants/titles\";\r\nimport { getCityWeather } from \"../redux/actions/weatherActions\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\n\r\nimport ForecastItem from \"./ForecastItem\";\r\n\r\nconst ForecastContainer = ({ currentCity, favouriteList }) => {\r\n  const dispatch = useDispatch();\r\n  const [city, setCity] = useState({\r\n    cityDetails: {\r\n      name: \"Tel Aviv\",\r\n      id: \"215854\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!Object.values(currentCity).length) {\r\n      getData(\r\n        `${weatherUrls.CITY_CURRENT_WEATHER}${city.cityDetails.id}${apiKeyUrls.APIKEY_URL}`\r\n      )\r\n        .then(function (weather) {\r\n          dispatch({\r\n            type: weatherActions.LOAD_CITY_WEATHER,\r\n            payload: {\r\n              cityDetails: {\r\n                name: city.cityDetails.name,\r\n                id: city.cityDetails.id,\r\n              },\r\n              currentWeather: weather[0],\r\n            },\r\n          });\r\n          getData(\r\n            `${weatherUrls.CITY_FIVE_DAY_FORECAST}${city.cityDetails.id}${apiKeyUrls.APIKEY_URL}`\r\n          )\r\n            .then((res) =>\r\n              dispatch({\r\n                type: weatherActions.LOAD_CITY_WEATHER_FORECAST,\r\n                payload: res,\r\n              })\r\n            )\r\n            .catch((error) => alert(`${errorMessage} ${error}`));\r\n        })\r\n        .catch((error) => alert(`${errorMessage} ${error}`));\r\n    }\r\n  }, [currentCity]);\r\n\r\n  if (Object.values(currentCity).length < 3) {\r\n    return (\r\n      <div class=\"d-flex align-items-center\">\r\n        <strong>Loading...</strong>\r\n        <div\r\n          className=\"spinner-border ms-auto\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\" style={{ marginTop: \"3%\" }}>\r\n        <ForecastHeader\r\n          currentCityData={currentCity}\r\n          favouriteList={favouriteList}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"5%\",\r\n          fontSize: \"xx-large\",\r\n        }}\r\n      >\r\n        {currentCity.currentWeather.WeatherText}\r\n      </div>\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"auto\",\r\n          paddingBlockStart: \"7%\",\r\n        }}\r\n      >\r\n        {currentCity.forecast.DailyForecasts.map((day) => {\r\n          return (\r\n            <div\r\n              key={day.Date}\r\n              className=\"col\"\r\n              style={{ border: \"ridge\", marginRight: \"10px\" }}\r\n            >\r\n              <ForecastItem data={day} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentCity: state.weatherReducer,\r\n    favouriteList: state.favoritesReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ForecastContainer);\r\n","import { combineReducers } from \"redux\";\r\nimport { favoritesReducer } from \"./favoritesReducer\";\r\nimport { weatherReducer } from \"./weatherReducer\";\r\n\r\nexport default combineReducers({ favoritesReducer, weatherReducer });\r\n","import { favoritesActions } from \"../../common/constants/actionType\";\r\n\r\nexport function favoritesReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case favoritesActions.ADD_CITY_TO_FAVORITES:\r\n      return [...state, action.payload];\r\n    case favoritesActions.REMOVE_CITY_FROM_FAVORITES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { weatherActions } from \"../../common/constants/actionType\";\r\n\r\nexport function weatherReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case weatherActions.LOAD_CITY_WEATHER:\r\n      return {\r\n        ...state,\r\n        cityDetails: action.payload.cityDetails,\r\n        currentWeather: action.payload.currentWeather,\r\n      };\r\n\r\n    case weatherActions.LOAD_CITY_WEATHER_FORECAST:\r\n      return { ...state, forecast: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React from \"react\";\r\nimport { iconUrls } from \"../common/constants/urls\";\r\nimport { setWeatherImage } from \"../common/functions/imageFunctions\";\r\n\r\nconst FavoriteItem = ({ data }) => {\r\n  return (\r\n    <div className=\"col\" style={{ textAlign: \"center\", color: \"black\" }}>\r\n      <div>{data.name}</div>\r\n      <div>\r\n        {data.currentWeather.Temperature.Metric.Value}{\" \"}\r\n        {data.currentWeather.Temperature.Metric.Unit}\r\n      </div>\r\n      <img\r\n        src={`${iconUrls.WEATHER_URL_PREFIX}${setWeatherImage(\r\n          data.currentWeather.WeatherIcon\r\n        )}${iconUrls.WEATHER_URL_SUFFIX}`}\r\n        alt={data.currentWeather.WeatherIcon}\r\n      />\r\n      <div>{data.currentWeather.WeatherText}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FavoriteItem from \"./FavoriteItem\";\r\nimport { weatherUrls } from \"../common/constants/urls\";\r\nimport { weatherActions } from \"../common/constants/actionType\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getData } from \"../common/functions/getDataFromApi\";\r\nimport { apiKeyUrls } from \"../common/constants/urls\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavoritesContainer = ({ favorites }) => {\r\n  const dispatch = useDispatch();\r\n  const setFavouriteCity = (city) => {\r\n    getData(\r\n      `${weatherUrls.CITY_CURRENT_WEATHER}${city.id}${apiKeyUrls.APIKEY_URL}`\r\n    ).then(function (weather) {\r\n      dispatch({\r\n        type: weatherActions.LOAD_CITY_WEATHER,\r\n        payload: {\r\n          cityDetails: {\r\n            name: city.name,\r\n            id: city.id,\r\n          },\r\n          currentWeather: weather[0],\r\n        },\r\n      });\r\n      getData(\r\n        `${weatherUrls.CITY_FIVE_DAY_FORECAST}${city.id}${apiKeyUrls.APIKEY_URL}`\r\n      )\r\n        .then((res) =>\r\n          dispatch({\r\n            type: weatherActions.LOAD_CITY_WEATHER_FORECAST,\r\n            payload: res,\r\n          })\r\n        )\r\n        .catch((error) => alert(`forecast fetch error ${error}`));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\" style={{ marginTop: \"5%\" }}>\r\n      {favorites.map((city) => (\r\n        <div\r\n          className=\"col-1\"\r\n          key={city.id}\r\n          style={{ borderStyle: \"ridge\", margin: \"5%\" }}\r\n          onClick={() => setFavouriteCity(city)}\r\n        >\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              textDecorationLine: \"none\",\r\n            }}\r\n          >\r\n            <FavoriteItem data={city} />\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorites: state.favoritesReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(FavoritesContainer);\r\n","import Navbar from \"./common/components/Navbar\";\nimport Search from \"./common/components/Search\";\nimport ForecastContainer from \"./weather/ForecastContainer\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Favorites from \"./favorites/FavoritesContainer\";\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/favorites\">\n                <Favorites />\n              </Route>\n              <Route exact path=\"/\">\n                <div\n                  className=\"row search\"\n                  style={{\n                    margin: \"auto\",\n                    width: \"fit-content\",\n                    marginTop: \"30px\",\n                  }}\n                >\n                  <Search />\n                </div>\n                <div\n                  className=\"row forecast-container\"\n                  style={{\n                    margin: \"auto\",\n                    width: \"90%\",\n                    minHeight: \"400px\",\n                    marginTop: \"30px\",\n                    border: \"solid\",\n                  }}\n                >\n                  <ForecastContainer />\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}